<!--地址管理-->
<template>
  <view class="{{currentPage==0?'':'hidden'}}">
    <addressList :list.sync="addressList" :orderId.sync="orderId" :card_token.sync="card_token" @currentPage.user="getCurrentPage"></addressList>
  </view>
  <view class="{{currentPage==1?'':'hidden'}}">
    <addressAdd @currentPage.user="getCurrentPage"></addressAdd>
  </view>
  <view class="{{currentPage==2?'':'hidden'}}">
    <addressEdit @currentPage.user="getCurrentPage" ></addressEdit>
  </view>
</template>
<script>
import wepy from 'wepy';
import AddressList from "../components/address_list";
import AddressAdd from "../components/address_add";
import AddressEdit from "../components/address_edit";
import api from "../api/api";
import tip from '@/utils/tip';
import {
  USER_SPECICAL_INFO
} from '@/utils/constant';
export default class Address extends wepy.page {
  config = {
    navigationBarTitleText: '地址管理',
  }
  data = {
    card_token: '',
    orderId: '',
    addressList: [],
    receiverInfo:{},
    //显示当前组件 0 列表 1新增 2编辑
    currentPage: 0,
    type: "" //哪个页面跳转过来的
  }

  async getUserAddress(phone,code) {
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let token = userSpecialInfo.token;
    let uid = userSpecialInfo.uid;
    const json = await api.getUserAddress({
      query: {
        token: token,
        uid: uid
      }
    });

    if (json.data.code == 1) {
      this.addressList=json.data.data;
      this.$invoke("addressList","refreshList", this.addressList);
    } else {
      tip.error(json.data.msg)
    }
    that.showLoading = false;
  }

  async receiverInf(id) {
    let that = this;
    console.log('receiverInf')
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let token = userSpecialInfo.token;
    let uid = userSpecialInfo.uid;
    const json = await api.receiverInfoById({
      query: {
        id: id,
        uid: uid,
        token: token
      }
    });
    if (json.data.code == 1) {
      this.receiverInfo = json.data.data;
      let cityName = this.receiverInfo.city.trim().split(" ");
      let province = {
        code: this.receiverInfo.code[0],
        name: cityName[0]
      }
      let city = {
        code: this.receiverInfo.code[1],
        name: cityName[1]
      }
      let area = {
        code: this.receiverInfo.code[2],
        name: cityName[2]
      }
      this.receiverInfo.province = province
      this.receiverInfo.city = city
      this.receiverInfo.area = area
      this.$invoke("addressEdit","refresh", this.receiverInfo);
    } else {
      tip.error(json.data.msg)
    }
    that.showLoading = false;
  }

  components = {
    addressList: AddressList,
    addressAdd: AddressAdd,
    addressEdit: AddressEdit
  }

  onLoad(option) {
    this.currentPage = 0;
    this.getUserAddress();
    this.type = (option.type==undefined?"0":option.type);
    this.orderId = (option.id==undefined?"":option.id);
    this.card_token = (option.card_token==undefined?"":option.card_token);

    this.$invoke("addressList","setOrgType", this.type);
  }

  onShow(){
    let that = this;
    this.getUserAddress();
  }
  computed = {

  }
  methods = {
    getCurrentPage(cur,id) {
      console.log(cur,id)
      this.currentPage = cur;
      if (cur!=1&&cur!=0) {
        this.receiverInf(id);
      }
    }
  }
  onUnload() {
    if (this.currentPage !== 0) {
      wx.navigateTo({
        url: "/pages/address"
      })
    }
  }
  events = {
      refreshAddList(msg){
          this.getUserAddress();
      }
  }

}

</script>
<style lang="less">
  page {
    background: #fff;
  }
.hidden {
  display: none;
}

</style>
