<template>
  <view style="height: {{winHeight}}rpx; overflow:hidden">
    <import src="../plugins/wxParse/wxParse.wxml" />
    <!--index.wxml-->
    <swiper indicator-dots="true" autoplay="true" interval="5000" duration="500" indicator-active-color="#ffc452" indicator-color="#efefef" class="swiper">
      <block wx:for="{{detail.photoList}}" key="item" item="item" wx:key="key">
        <swiper-item>
          <image src="{{item.photo}}" data-src="{{item.photo}}" class="slide-image" @tap="previewImage" />
        </swiper-item>
      </block>
    </swiper>
    <view class="bg-white">
      <view class="order_num">
        <view class="price theme">￥<span>{{detail.price}}</span><span class="lineThrough c_gray_dc">￥{{detail.marketPrice}}</span></view>
        <view class="c000 fz24">已售{{detail.saleCount}}件</view>
      </view>
      <!-- 商品名字 -->
      <view class="goods-name c000 fz32">name{{goodsInfo.name}}</view>
    </view>

    <view class="spacing"></view>
    <view class="block">
      <view class="order_num">
        <view class="detail-title c000 fz32">商品详情</view>
        <!--      <image src="{{goodsInfo.thumLogo}}" mode="widthFix" class="goods-detail-img" />-->
      </view>
    </view>

    <view class="detail-bottom">
      <view class="bottom-box flex">
        <view class="counter-box flex">
          <button catchtap="jianBtnTap" data-index="{{index}}" class= "{{item.number==1? 'disabled' : ''}}">
            <span>-</span>
          </button>
          <span class="counter">{{orderNum}}</span>
          <button catchtap="jiaBtnTap" data-index="{{index}}">
            <span>+</span>
          </button>
        </view>

        <view class="sy-bottom {{canOrder?'btn_order':'order_color'}}" @tap="takeOrder">{{purchaseText}}</view>
      </view>
    </view>
    <view class="over_model {{hidden?'hidden':''}}"></view>
  </view>
</template>
<script>
import wepy from 'wepy'
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO
} from '@/utils/constant';
import tip from '@/utils/tip'
import api from '@/api/api';
import WxParse from "../plugins/wxParse/wxParse";
import CommentList from "../components/comment_list"
import timer from '@/components/common/timer'
export default class goodsDetail extends wepy.page {
  config = {
    navigationBarTitleText: '商品详情'
  }
  data = {
    winWidth: 0,
    winHeight: '100%',
    goodsId: 0,
    detail: {},
    good_bigimg: [],
    //订单活动开始时间（格式yy-mm-dd 或者 yy/mm/dd ）
    //startTime: "2017-07-15 16:00:00",
    startTime: "",
    //订单活动结束时间（格式yy-mm-dd 或者 yy/mm/dd ）
    //endTime: "2017-07-21 16:04:00"
    endTime: "",
    hidden: true,
    //动画效果
    animationData: "",
    //购买方式:1-加购物车,2-立即购买
    orderType: 2,
    //购买数量
    orderNum: 1,
    //是否收藏
    isFavorite: false,
    isValidDate: true,
    canOrder: true, //是否能下单
    purchasetype: 1, //1-正常购买;2-补货
    purchaseText: "立即购买",
    special: 0, ////0-正常入库;1-特价专区和换货专区,
    commentList: [

      {
        url: "../images/icon_nav_01_new.png",
        name: "浪子天涯",
        time: "2017-10-01 10:10",
        content: "东西收到,很满意!!真的是超级好的卖家,解答疑问不厌其烦,细致认真,关键是东西好,而且货物发得超快,包装仔细,值得信赖!",
        start: 4.5,
        children: [{
          content: "跟你交易次次都这么成功和开心的．．希望我们以后有更多的交易吧．．．哈哈"
        }]
      },
      {
        url: "../images/icon_nav_02_new.png",
        name: "勇闯天下",
        time: "2017-10-01 10:10",
        content: "太感谢了，衣服很漂亮，朋友很喜欢，最主要的是买家太好了~~~大大的赞一个。。。 衣服，很合身",
        start: 4,
        children: []
      }


    ],
    commentList1: [],
  }

  components = {
    commentList: CommentList,
    timer:timer
  }
  onLoad(option) {
    let that = this;
    this.orderNum = 1;
    this.purchasetype = 1;
    this.isFavorite = false;
    this.isValidDate = true;
    this.canOrder = true;
    this.hidden = true;
    this.winHeight = "100%";
    that.detail = {};
    that.$apply();
    //接收上一个页面传过来的参数
    that.goodsId = option.id;
    if (option.special != undefined) {
      this.special = option.special;
    }
    that.getGoodsDetail();
    that.addUserBrowser();
    console.log("special===" + this.special);
  }
  onShow() {
    //创建动画
    var animation = wx.createAnimation({
      transformOrigin: "50% 50%",
      duration: 200,
      timingFunction: "linear",
      delay: 0
    })
    this.animation = animation;
  }
  wxParseImgLoad(e) {}

  wxParseImgTap(e) {
    var that = this
    var nowImgUrl = e.target.dataset.src
    var tagFrom = e.target.dataset.from
    if (typeof(tagFrom) != 'undefined' && tagFrom.length > 0) {
      wx.previewImage({
        current: nowImgUrl, // 当前显示图片的http链接
        // urls: that.data[tagFrom].imageUrls // 需要预览的图片http链接列表
        urls: that.bindData[tagFrom].imageUrls // 注释掉上面的 换着一行 (http://blog.csdn.net/zhuming3834/article/details/74380079)
      })
    }
  }
  async getGoodsDetail() {
    let that = this;
    //const json = await api.getGoodsDetail({
    const json = await api.goodsDetail({
      query: {
        id: that.goodsId
      }
    });
    let time = {};
    if (json.data.code == 0) {
      let data = json.data.data;
      that.detail = data;
      WxParse.wxParse('detailInfo', 'html', that.detail.detailInfo, this);
      time.endTime = that.detail.validEndTime;
      time.startTime = that.detail.startTime;
      if (json.data.validDate == "0") {
        that.isValidDate = false;
        if (this.purchasetype == 1 && this.special != 1) {
          this.canOrder = false;
        }
      }
    } else {
      if (json.data.msg) {
        tip.error(json.data.msg)
      } else {
        tip.error('查看商品失败')
      }
    }
    that.$apply();
  }
  async addUserBrowser() {
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    const json = await api.addBrowser({
      query: {
        goodsId: that.goodsId,
        openId: openId
      }
    });
  }
  computed = {}
  events = {}
  //立即购买
  async doTakeOrder() {
    let that = this;
    console.log('111111111111111111111111111111')
    wepy.navigateTo({
      url: "/pages/comfire_order?goodsId=" + that.goodsId
    })
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    const json = await api.addCart({
      query: {
        openId: openId,
        goodsId: that.goodsId,
        goodsSkuId: this.detail.goodsSkuValIds,
        purchaseType: this.purchasetype,
        num: this.orderNum
      }
    });
    if (json.data.code == 0) {
      console.log(1)
      this.winHeight = "100%";
      this.animation.height(0).step();
      this.setData({
        animationData: this.animation.export()
      })
      setTimeout(() => {
        this.hidden = true;
        this.$apply();
      }, 100)
      wepy.navigateTo({
        url: "/pages/comfire_order?goodsId=" + that.goodsId
      })
    } else {
      console.log(1)
      if (json.data.msg) {
        tip.error(json.data.msg)
      } else {
        tip.error('无法立刻购买')
      }
    }
  }
  async showConfirmData() {
    console.log(2222222222222222)
    this.animation.height('783rpx').step();
    this.setData({
      animationData: this.animation.export()
    })
    setTimeout(() => {
      this.hidden = false;
      let systemInfo = wepy.getStorageSync(SYSTEM_INFO);
      this.winHeight = systemInfo.windowHeight;
      this.$apply();
    }, 100)
  }
  methods = {
    // issus : https://mp.weixin.qq.com/debug/wxadoc/dev/api/ui-navigate.html#wxrelaunchobject
    homePage() {
      wepy.switchTab({
        url: '/pages/home'
      })
      // wx.switchTab({
      //   url: '/pages/home'
      // })
      // console.log(wepy)
      // console.log(wx)
    },
    moreComment() {
      wepy.navigateTo({
        url: "/pages/comment"
      })
    },
    previewImage(e) {
      let current = e.target.dataset.src;
      let imageArry = [];
      let obj = this.detail.photoList;
      Object.keys(obj).forEach((item) => {
        imageArry.push(obj[item].photo)
      });
      wx.previewImage({
        current: current, // 当前显示图片的http链接
        urls: imageArry, // 需要预览的图片http链接列表
      })
    },
    bindOrderNumInput(e) {
      this.orderNum = e.detail.value;
    },
    takeOrder() {
      console.log(1111111111111)
      if (!this.canOrder) {
        return;
      }
      // this.showConfirmData();
      this.orderType = 2;
      this.doTakeOrder();
    },
    closeModel() {
      this.winHeight = "100%";
      this.animation.height(0).step();
      this.setData({
        animationData: this.animation.export()
      })
      setTimeout(() => {
        this.hidden = true;
        this.$apply();
      }, 100)
    },
    jiaBtnTap(e) {
      this.orderNum++;
    },
    jianBtnTap() {
      if (this.orderNum > 1) {
        this.orderNum--;
      }
    },
    selAttr(e) {
      var id = e.currentTarget.dataset.id;
      var nameid = e.currentTarget.dataset.nameid;
      var index = e.currentTarget.dataset.index;
      for (var i = 0; i < this.detail.goodsSkuNameList.length; i++) {
        var skuValList = this.detail.goodsSkuNameList[i].skuValList;
        for (var j = 0; j < skuValList.length; j++) {
          var skuVal = skuValList[j];
          if (skuVal.skuNameId == nameid) {
            skuVal.current = false;
            if (skuVal.skuValId == id) {
              skuVal.current = true;
              this.detail.goodsSkuValIds[index] = id;
              for (var k = 0; k < this.detail.goodsSkuList.length; k++) {
                var skuValIds = JSON.parse(this.detail.goodsSkuList[k].skuValIds).toArray;
                console.log("goodskuids..." + this.detail.goodsSkuList[k].skuValIds);
                console.log("this goodskuids..." + this.detail.goodsSkuValIds);
                if ("[" + this.detail.goodsSkuValIds.toString() + "]" === this.detail.goodsSkuList[k].skuValIds) {
                  console.log("goodskuids equals...");
                  this.detail.stockNum = this.detail.goodsSkuList[k].stockNum;
                  this.detail.price = this.detail.goodsSkuList[k].price;
                  this.$apply();
                  break;
                }
              }
            }
          }
        }
      }
    },
    onShareAppMessage: function(res) {
      if (res.from === 'button') {
        // 来自页面内转发按钮
        console.log(res.target)
      }
      return {
        title: this.detail.name,
        path: '/pages/goods_detail?id=' + this.goodsId,
        success: function(res) {
          // 转发成功
        },
        fail: function(res) {
          // 转发失败
        }
      }
    }
  }
}

</script>
<style lang="less">
.swiper {
  height: 554rpx;
  .slide-image {
    width: 100%;
    height: 100%;
  }
}

.goods-name {
  padding: 0 44rpx;
  width: 100%;
  height: 52rpx;
  line-height: 52rpx;
  box-sizing: border-box;
}

.goods-details {
  padding: 0 44rpx;
  width: 100%;
  box-sizing: border-box;
  .detail-title {
    height: 84rpx;
    line-height: 84rpx;
  }

  .goods-detail-img {
    width: 100%;
    height: auto;
  }
}

.counter-box {
  flex-grow: 1;
}

.order_num {
  background: #fff;
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 108rpx;
  padding: 0 30rpx;
}

.block {
  padding: 27rpx 0rpx;
  background: #fff;
}

.detail-bottom {
  width: 100%;
  border-top: 1px solid #ededed;
  position: fixed;
  bottom: 0;
  background: #fff;
  z-index: 1001;
  .bottom-box {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    position: relative;
  }
  .sy-bottom {
    padding: 15rpx 40rpx;
    height: 60rpx;
    line-height: 60rpx;
    font-size: 30rpx;
  }
  .btn_order {
    background: #ff4856;
    color: #fff;
  }
  .order_color {
    background: #A9A9A9;
    color: #fff;
  }
  .cart_color {
    color: #fff;
    background: #A9A9A9;
  }
  .item:first-child {
    border-right: 1px solid #efefef;
  }
  .item {
    flex: 1;
    text-align: center;
    .doc {
      font-size: 24rpx;
    }
  }
}
</style>
