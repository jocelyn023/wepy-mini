<style lang="less">
@import "./styles/base";
@import "./styles/icon";
@import "./styles/style";

</style>
<script>
import wepy from 'wepy';
import 'wepy-async-function'
import tip from './utils/tip'
export default class extends wepy.app {
  config = {
    pages: [
      'pages/authorize',
      'pages/home',
      'pages/home_detail',
      'pages/classify',
      'pages/shop_cart',
      'pages/info',
      'pages/search',
      'pages/test',
      'pages/sign_in',
      'pages/exchange_goods',
      'pages/wholesale',
      'pages/replenishment_goods',
      'pages/register',
      'pages/order',
      'pages/reorder',
      'pages/pay_success',
      'pages/points',
      'pages/points_more',
      'pages/points_rule',
      'pages/collection',
      'pages/messages',
      'pages/setting',
      'pages/goods_detail',
      'pages/comfire_order',
      'pages/address',
      'pages/order_detail',
      'pages/filter',
      'pages/logistics',
      'pages/comment',
      'pages/comment_add'
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#FFFFFF',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black',
      enablePullDownRefresh: false,
      backgroundColor: '#EFEFEF'

    },
    "tabBar": {
      "color": "#999999",
      "selectedColor": "#ff6a3c",
      "backgroundColor": "#ffffff",
      "borderStyle": "black",
      "list": [{
        "pagePath": "pages/home",
        "text": "首页",
        "iconPath": "images/icon_home.png",
        "selectedIconPath": "images/icon_home_active.png"
      }, {
        "pagePath": "pages/exchange_goods",
        "text": "提货",
        "iconPath": "images/icon_card.png",
        "selectedIconPath": "images/icon_card_active.png"
      }, {
        "pagePath": "pages/info",
        "text": "我的",
        "iconPath": "images/icon_info.png",
        "selectedIconPath": "images/icon_info_active.png"
      }]
    }
  }

  globalData = {}

  constructor() {
    super()
    this.use('requestfix')
    this.use('promisify');
    this.intercept('request', {
      // 发出请求时的回调函数
      config (p) {
        // 对所有request请求中的OBJECT参数对象统一附加时间戳属性
        // p.timestamps = +new Date();
        // console.log('config request: ', p);
        // 必须返回OBJECT参数对象，否则无法发送请求到服务端
        return p;
      },

      // 请求成功后的回调函数
      success (p) {
        console.log(p)
        // 可以在这里对收到的响应数据对象进行加工处理
        if(p.statusCode != 200){
          let res = wepy.showModal({
            title: '服务器请求失败',
            content: '获取数据失败'
          })
          if (res.confirm) {
            wepy.switchTab({
              url: '/pages/authorize'
            })
          }
        } else {
          if(p.data.code==0) {
            if(p.data.error_no==40010) {
              //token失效
              let res = wepy.showModal({
                title: 'token已失效',
                content: '请重新登录！'
              })
              if (res.confirm) {
                wepy.navigateTo({
                  url: '/pages/authorize'
                })
              }
            } else {
              tip.error(p.data.error_msg);
            }
          }
        }
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p;
      },

      //请求失败后的回调函数
      fail (p) {
        console.log('request fail: ', p);
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        tip.error('服务器请求失败，请稍后再试');
        return p;
      },

      // 请求完成时的回调函数(请求成功或失败都会被执行)
      complete (p) {
        console.log('request complete: ', p);
      }
    });
  }

  async onLaunch(option) {

  }
}

</script>
