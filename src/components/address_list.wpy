<template>
  <view class="top cfff flex type_theme" @tap="add">
    <view class="add"><i class="gmtfont icon-pos"></i>添加收货地址</view>
    <i class="gmtfont icon-right"></i>
  </view>
  <view class="address">
    <block wx:if="{{addressList}}">
      <repeat for="{{addressList}}" key="index" index="index" item="item">
        <view class="list_box">
          <view class="flex user_info">
            <view class="name">{{item.name}}</view>
            <view class="phone">{{item.mobile}}</view>
          </view>
          <view class="active_address">{{item.city}}{{item.address}}</view>
          <view class="flex btns-wrap">
            <view class="flex">
              <button class="type_theme btn-use" wx:if="{{type==1}}" @tap="pickGoodsf" data-id="{{item.id}}">使用该地址</button>
            </view>
            <view class="button-wrap flex">
              <button class="type_white edit" @tap.stop="edit" data-id="{{item.id}}">修改地址</button>
              <button class="type_white del" @tap.stop="del" data-id="{{item.id}}">删除</button>
            </view>
          </view>
        </view>
      </repeat>
    </block>
    <block wx:else>
      <view>您还没有添加收货地址，请点击上方添加按钮添加地址</view>
    </block>
  </view>
</template>
<script>
import wepy from 'wepy'
import SwipeDelete from './common/wepy-swipe-delete'
import tip from '@/utils/tip'
import api from "@/api/api";
import {
  USER_SPECICAL_INFO,
  ADDRESS_ID,
  USER_INFO
} from '@/utils/constant';
export default class AddressList extends wepy.component {
  props = {
    orderId: {
      default: '',
      type: String
    },
    //type:0 普通地址页面， 1的时候是订单过来的页面
    type: {
      default: 1,
      type: Number
    },
    addressList: {
      default: [{
        style: 0
      }, {
        style: 0
      }],
      type: Object
    }
  }
  components = {
    swipeDelete: SwipeDelete
  }

  data = {
    receiverInfo:{},
    type: ""
  }

  async delUserAddress(id) {
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let token = userSpecialInfo.token;
    let uid = userSpecialInfo.uid;
    const json = await api.delUserAddress({
      query: {
        uid: uid,
        token: token,
        id: id
      },
      method: 'POST'
    });

    if (json.data.code == 1) {
      console.log("删除成功");
      this.$emit('currentPage', 0);
      this.$emit('refreshAddList', 'hehe');
    } else {
      tip.error(json.data.msg)
    }
    that.showLoading = false;
  }

  //提货
  async pickGoods(address_id) {
    console.log("提货")
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let token = userSpecialInfo.token;
    let uid = userSpecialInfo.uid;
    let id = that.orderId;
    const json = await api.pickGoods({
      query: {
        uid: uid,
        token: token,
        id: id,
        address_id: id
      },
      method: 'POST'
    });

    if (json.data.code == 1) {
      let res = await wepy.showModal({
        title: '提货成功',
        content: '请耐心等待商品！'
      })
      if (res.confirm) {
        wepy.navigateTo({
          url: '/pages/order'
        })
      }
      that.showLoading = false;
    }
  }
  methods = {
    add() {
      //0 列表 1新增 2编辑
      this.$emit('currentPage', 1);
    },
    edit(e) {
      var id = e.currentTarget.dataset.id;
      //0 列表 1新增 2编辑
      this.$emit('currentPage', 2, id);
    },
    del(e) {
      var id = e.currentTarget.dataset.id;
      //0 列表 1新增 2编辑
      this.delUserAddress(id)
    },
    refreshList(val){
      if (val==undefined) return;
      console.log("val.....",val);
      this.addressList = val;
      this.$apply();
    },

    setOrgType (type) {
      this.type = type;
    },
    pickGoodsf (e) {
      var id = e.currentTarget.dataset.id;
      this.pickGoods(id)
    },
    tapSelAddress(e) {
      if (this.type!="order") {
        return;
      }
      var id = e.currentTarget.dataset.id;
      console.log("id=="+id);
      wepy.setStorageSync(ADDRESS_ID,id);
      wepy.redirectTo({
        url: "/pages/comfire_order?from=selAdd"
      })
    }
  }

  onLoad() {
    console.log(this.addressList)
  }
}

</script>
<style lang="less">
  .top {
    margin-bottom: 20rpx;
    padding: 0 40rpx;
    width: 100%;
    height: 92rpx;
    line-height: 92rpx;
    box-sizing: border-box;
    font-size: 14px;
  }
  .add {
    height: 100%;
    line-height: 92rpx;
  }

  .button-wrap {
    width: 230rpx;
    button {
      padding: 0;
      height: 88rpx;
      line-height: 88rpx;
      font-size: 24rpx;
    }
    button:after {
      border: none
    }
    .edit {
      width: 132rpx;
      margin-right: 12rpx;
    }
    .del {
      width: 84rpx;
    }
  }
.address {
  .btns-wrap {
    width: 100%;
    align-items: flex-end;
    justify-content: space-between;
    .btn-use {
      width: 200rpx;
      height: 96rpx;
      font-size: 28rpx;
      line-height: 96rpx;
    }
  }

  .list_box {
    margin: 0 auto 20rpx;
    padding: 20rpx 44rpx;
    width: 685rpx;
    /*height: 262rpx;*/
    box-sizing: border-box;
    background-color: #fcfcfc;
    background-image: linear-gradient(#fcfcfc 0%, #e0e0e0 100%);
    border-radius: 12rpx;
    .user_info {
      width: 100%;
      height: 72rpx;
      align-items: baseline;
      color: #101010;
    }
    .name {
      width: 164rpx;
      height: 100%;
      line-height: 72rpx;
      font-size: 36rpx;
    }
    .phone {
      flex-grow: 1;
      width: 164rpx;
      height: 100%;
      line-height: 54rpx;
      font-size: 24rpx;
    }

    .active_address {
      margin-bottom: 40rpx;
      min-height: 50rpx;
      line-height: 30rpx;
      font-size: 24rpx;
      color: #101010;
    }
  }
  .list_box:last-child {
    border-bottom: 1px solid #efefef;
  }
  .address_list {
    display: flex;
    justify-content: space-between;
    height: 150rpx;
    align-items: center;
    padding: 0rpx 0px 0px 35rpx;
    border-top: 1px solid #efefef;
    .title {
      color: #000;
    }
    .arrow {
      height: 150rpx;
      line-height: 150rpx;
      width: 150rpx;
      text-align: center;
      color: #9a9a9a;
    }
    .user_info {
      color: #1a1a1a;
    }
    .active_address {
      margin-top: 20rpx;
    }
    .defult {
      color: #ea4a3a;
    }
  }
}

.add_wrap {
  display: block;
  width: 95%;
  left: 0;
  right: 0;
  position: absolute;
  bottom: 20rpx;
  margin: 0 auto;
}

</style>
